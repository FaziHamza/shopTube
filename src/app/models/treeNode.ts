import { FormlyFieldConfig } from "@ngx-formly/core";
import { badge } from "./badge";
import { actionConfig, btnConfig, btnGroup } from "./btnConfig";
import { builderConfig } from "./cardConfig";
import { formlyConfig } from "./formlyConfig";
import { gridConfig } from "./gridConfig";
import { headerConfig } from "./headerConfig"

export interface TreeNode {
  id: string;
  screenId?: string;
  type?: string;
  editor?: any;
  formatter?: any;
  limit?: number,
  belowpercentage?: number,
  belowpercentageColor?: string,
  numberofcolumns?: string,
  defaultColor?: string,
  thisTitle?: string,
  actionType?: string;
  formlyType?: string;
  wrapper?: string;
  highLight?: boolean;
  isNextChild?: boolean;
  padding?: any;
  hideExpression?: boolean;
  nzCount?: any;
  dropdownOptions?: any;
  nzText?: any;
  nzColor?: any;
  visibleafter?: any;
  paddingLeft?: any;
  tableId?: any;
  paddingRight?: any;
  paddingTop?: any;
  paddingBottom?: any;
  showValue?: boolean;
  className?: string;
  affixType?: any;
  margin?: any;
  target?: any;
  alt?: any;
  source?: any;
  imagHieght?: any;
  imageWidth?: any;
  base64Image?: any;
  imageClass?: any;
  data?: any;
  style?: any;
  fontSize?: any;
  textAlign?: any;
  headingColor?: any;
  classNameForPosition?: any;
  dividerClassName?: any;
  dividerPosition?: any;
  options?: any;
  text?: any;
  src?: any;
  bgColor?: any;
  gap?: any;
  lineColor?: any;
  textcolorForStyle?: any;
  lineColorForStyle?: any;
  dividerFormat?: any;
  verticalLineHieght?: any;
  verticalLinePosition?: any;
  verticalLinePositionForCssBinding?: any;
  verticalLineHieghtForCssBinding?: any;
  verticalLineColorForCssBinding?: any;
  // fieldGroupClassName:?string;
  children?: TreeNode[];
  rowData?: any;
  columnData?: any;
  isExpanded?: boolean;
  expanded?: boolean;
  screenVariables?: any[];
  sectionDisabled?: string;
  position?: string,
  header?: any;
  noResult?: any;
  nzSimple?: any;
  nzSize?: any;
  nzShowSizeChanger?: any;
  showCheckbox?: any;
  fixHeader?: any;
  tableScroll?: any;
  fixedColumn?: any;
  sort?: any;
  tableHeaders?: any;
  tableNoResultArray?: any;
  expandable?: any;
  tableData?: any;
  name?: any;
  sortingType?: any;
  showColumn?: any;
  editorType?: any;
  jsonData?: string,
  formly?: FormlyFieldConfig[],
  formlyData?: any[],
  pageFooterData?: any[],
  pageFooterButtonGroupData?: any[],
  pageHeaderData?: any[],
  pageHeaderButtonGroupData?: any[],
  pageHeaderAlertData?: any[],
  btnConfig?: btnConfig[],
  buttonGroupData?: any[],
  headerButtonGroupData?: any[],
  bodyButtonGroupData?: any[],
  footerButtonGroupData?: any[],
  // buttonGroup?: btnGroup[],
  actionConfig?: actionConfig,
  // btnConfig?: any[],
  gridConfig?: any,
  haediing?: string,
  viewType?: string,
  tooltip?: any,
  status?: any,
  resultTitle?: any,
  subTitle?: any,
  delayTime?: any,
  loaderText?: any,
  loaderIcon?: any,
  btnLabel?: any,
  nzPopoverContent?: any,
  nzPopoverTitle?: any,
  avatar?: any,
  author?: any,
  node?: any,
  switchType?: any,
  switchPosition?: any,
  timeOut?: any,
  positionClass?: any,
  progressBar?: any,
  message?: any,
  toastrType?: any,
  toasterTitle?: any,
  closeIcon?: any,
  description?: any,
  animate?: any,
  pauseOnHover?: any,
  duration?: any,
  title?: any,
  content?: any,
  sortable?: any,
  headingConfig?: headerConfig[],
  paragrapghConfig?: headerConfig[],
  simpleCardConfig?: builderConfig[],
  accordionConfig?: any,
  section?: any,
  thisValue?: string,
  lastTitle?: string,
  lastValue?: string,
  prevTitle?: string,
  prevValue?: string,
  growth?: string,
  value?: string,
  chart?: any,
  simpleCardWithHeaderBodyFooterConfig?: any,
  timelineConfig?: any,
  alertConfig?: any,
  videoConfig?: any,
  // chartCardConfig?: builderConfig[],
  audioSrc?: any,
  dataOnly?: any,
  nodes?: any,
  widgetSecondCard?: builderConfig[],
  widgetSectionCard?: builderConfig[],
  browserdata?: builderConfig[],
  visitordonutChart?: builderConfig[],
  saledDonutChart?: builderConfig[],
  analyticsChart?: builderConfig[],
  gridList?: any,
  gridData?: any,
  label?: string,
  min?: any,
  invoiceNumberLabel?: any,
  datelabel?: any,
  paymentTermsLabel?: any,
  poNumber?: any,
  billToLabel?: any,
  dueDateLabel?: any,
  shipToLabel?: any,
  notesLabel?: any,
  subtotalLabel?: any,
  dicountLabel?: any,
  shippingLabel?: any,
  taxLabel?: any,
  termsLabel?: any,
  totalLabel?: any,
  amountpaidLabel?: any,
  balanceDueLabel?: any,
  max?: any,
  sliderType?: any,
  disabled?: boolean,
  headingSize?: string,
  buttonFormat?: string,
  btngroupformat?: string,
  btnGroupPosition?: string,
  footer?: boolean,
  class?: string,
  isTitle?: boolean,
  textColor?: string,
  repeat?: any,
  color?: string,
  icon?: any,
  btnIcon?: any,
  href?: any,
  btnType?: any,
  link?: string,
  forCommomComponentCondition?: string,
  pagination?: any,
  delete?: boolean,
  update?: boolean,
  create?: boolean,
  filter?: any,
  backGroundColor?: any,
  labelPosition?: string,
  repeatable?: any,
  alertPosition?: string,
  moduleName?: string,
  moduleId?: string,
  badge?: badge[],
  parentId?: number;
  isLayout?: boolean;
  subItems?: any;
  menuData?: any;
  key?: any;
  nzTitle?: any;
  nzGhost?: any;
  nzExpandIconPosition?: any;
  nzDisabled?: any;
  nzExpandedIcon?: any;
  nzShowArrow?: any;
  nzBordered?: any;
  nzFooter?: any;
  nzLoading?: any;
  nzPaginationType?: any;
  nzPaginationPosition?: any;
  nzFrontPagination?: any;
  nzShowPagination?: any;
  showColumnHeader?: any;
  pattern?: any;
  emailTypeAllow?: any;
  refrance?: string;
  minlength?: number;
  maxlength?: number;
  required?: boolean;
  deleteapi?: string;
  //FOR DRAWER
  btnText?: string;
  isClosable?: boolean;
  extra?: string;
  isMask?: boolean;
  isMaskClosable?: boolean;
  isCloseOnNavigation?: boolean;
  isKeyboard?: boolean;
  maskStyle?: {};
  bodyStyle?: {};
  headerText?: string;
  footerText?: string;
  isVisible?: boolean;
  placement?: string;
  size?: string;
  width?: string;
  height?: string;
  offsetX?: number;
  offsetY?: number;
  wrapClassName?: string;
  zIndex?: number;
  onClose?: string;
  //Skeleton
  isActive?: boolean;
  buttonShape?: string;
  avatarShape?: string;

  //list
  isBordered?: boolean;
  isSplit?: boolean;
  isEdit?: boolean;
  isUpdate?: boolean;
  isDelete?: boolean;
  isLoad?: boolean;
  isColon?: boolean;
  isBadeg?: boolean;
  loadText?: string;
  nzExtra?: string;
  nzStatus?: string;
  nzSpan?: number;
  mainDashonicTabsConfig?: any,
  dashonicTabsConfig?: any,
  dropdownConfig?: any,
  pageConfig?: any,
  carousalConfig?: any,
  carousalType?: any,
  buttonsConfig?: any,
  bootstrapTabsConfig?: any,
  dividerConfig?: any,
  fixedDivConfig?: any,
  fixedDivChild?: any,
  kambanChildren?: any,
  users?: any,
  getVariable?: string,
  setVariable?: string,
  date?: string;
  variant?: string;
  total?: string;
  mainDashonicTabsChild?: any
  switchConfig?: any,
  uploadBtnLabel?: any,
  progressBArConfig?: any,
  calenderConfig?: any,
  sharedMessagesConfig?: any,
  heading?: string,
  labelIcon?: string,
  headingIcon?: string,
  subHeading?: string,
  subHeadingIcon?: string,
  subheadingColor?: string,
}
